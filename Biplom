// Подключаем либы
#include "math.h"

#include "Adafruit_VL53L0X.h"
Adafruit_VL53L0X lox = Adafruit_VL53L0X();

#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27,16,2);

float start_level = 0;

float laser_measure(uint8_t oversampling = 1) {
  VL53L0X_RangingMeasurementData_t measure;
  if (oversampling == 1) {    // Единичный замер
    lox.rangingTest(&measure, false);
    if (measure.RangeStatus != 4) {  // phase failures have incorrect data
      return measure.RangeMilliMeter;
    }
    while (measure.RangeStatus == 4) {
      lox.rangingTest(&measure, false);
    }
    return measure.RangeMilliMeter;
    
  } else {    // Если оверсамплинг указан
    uint16_t measured_values[oversampling];
    float average = 0;
    
    // Замеряем много замеров
    for (uint8_t i=0; i<oversampling; i++) {
      lox.rangingTest(&measure, false);
      if (measure.RangeStatus == 4) {  // phase failures have incorrect data
        measured_values[i] = 0;
        continue;
      }
      float measured_value = measure.RangeMilliMeter;
      measured_values[i] = measured_value;
    }
    
    // Считаем среднее значение
    uint32_t meas_summ = 0;
    uint8_t meas_count = 0;
    for (uint8_t i=0; i<oversampling; i++) {
      if (measured_values[i] == 0) {
        continue;
      }
      meas_summ += measured_values[i];
      meas_count++;
    }
    average = 1.0 * meas_summ / meas_count;
    //Serial.print("average_0 = "); Serial.println(average);

    // Считаем среднее отклонение
    uint32_t err_summ = 0;
    for (uint8_t i=0; i<oversampling; i++) {
      if (measured_values[i] == 0) {
        continue;
      }
      err_summ += abs(measured_values[i] - average);
    }
    float err_average = 1.0 * err_summ / meas_count;
    //Serial.print("err_average = "); Serial.println(err_average);

    // Отрезаем те, что отклонены дальше среднего
    for (uint8_t i=0; i<oversampling; i++) {
      if (measured_values[i] == 0) {
        continue;
      }
      float err = abs(measured_values[i] - average);
      if (err > err_average) {
        measured_values[i] = 0;
      }
    }

    // Заново считаем среднее значение
    meas_summ = 0;
    meas_count = 0;
    for (uint8_t i=0; i<oversampling; i++) {
      if (measured_values[i] == 0) {
        continue;
      }
      meas_summ += measured_values[i];
      meas_count++;
    }
    average = 1.0 * meas_summ / meas_count;
    //Serial.print("average = "); Serial.println(average);
    return(average);
  }
  return 0;
}



float visc_calc(float h_max, float height, uint16_t curr_time) {
  float visc, tau, ro;
  ro = 1.0;
  tau = 0.0 - (1.0*curr_time) / (log((1.0*height)/h_max));
  visc = abs(tau * ro * 0.0093111);
  Serial.print("h_max = "); Serial.print(h_max);
  Serial.print("\theight = "); Serial.print(height);
  Serial.print("\tcurr_time = "); Serial.print(curr_time);
  Serial.print("\ttau = "); Serial.print(tau);
  Serial.print("\tvisc = "); Serial.println(visc);
  float kk = 5.0;   //0.0025;
  return visc * kk;
}


void setup() {
  Serial.begin(115200);
  // Инициализируем дисплей
  lcd.init();
  lcd.backlight();

  // Выводим на дисплей надпись "  Preparing...  "
  lcd.setCursor(0, 0);
  lcd.print("  Preparing...  ");
  uint32_t last_lcd = millis();

  while (millis() - last_lcd < 1000);
  lcd.setCursor(0, 1);
  lcd.print("  Preparing...  ");
  lcd.setCursor(0, 0);
  lcd.print(" System check...");
  last_lcd = millis();

  // Подаём питание на дальномер
  pinMode(2, OUTPUT);
  digitalWrite(2, 1);
  
  // Инициализируем дальномер
  if (!lox.begin()) {
    while (millis() - last_lcd < 1000);
    Serial.println(F("Failed to boot VL53L0X"));
    lcd.setCursor(0, 0);
    lcd.print("     Error!     ");
    lcd.setCursor(0, 1);
    lcd.print(" VL53L0X failed ");
    while(!lox.begin());
  }

  uint8_t overs_s = 16;
  bool ready = 0;
  while (!ready) {
    uint32_t start_time = millis();
    laser_measure(overs_s);
    int16_t delta_time = millis() - start_time;
    if (millis() - start_time > 900) {overs_s--;}
    else if (millis() - start_time < 750) {overs_s++;}
    else {ready = 1;}
    Serial.print("overs_s = "); Serial.println(overs_s);
  }
  
  while (millis() - last_lcd < 1000);
  lcd.setCursor(0, 1);
  lcd.print(" System check...");
  lcd.setCursor(0, 0);
  lcd.print("   System OK!   ");
  last_lcd = millis();
  
  // Замеряем начальный уровень жидкости c оверсамплингом 100  
  // Запоминаем начальный уровень жидкости как h0
  while (millis() - last_lcd < 1000);
  lcd.setCursor(0, 1);
  lcd.print("   System OK!   ");
  lcd.setCursor(0, 0);
  lcd.print(" Calibration... ");
  last_lcd = millis();
  
  start_level = laser_measure(128);
  
  while (millis() - last_lcd < 1000);
  lcd.setCursor(0, 1);
  lcd.print(" Calibration... ");
  lcd.setCursor(0, 0);
  lcd.print("     Ready!     ");
  last_lcd = millis();
  
  // Выводим на вторую строчку дисплея "Height =  0.0 mm"
  while (millis() - last_lcd < 1000);
  lcd.setCursor(0, 1);
  lcd.print("Height =  0.0 mm");
  last_lcd = millis();

  // Инициализируем насос
  pinMode(3, OUTPUT);
  
  // Выводим на дисплей надпись "   Lifting...   "
  lcd.setCursor(0, 0);
  lcd.print("   Lifting...   ");
  
  // Поднимаем жидкость до уровня +15 мм:
  // Запускаем мотор на минимальную мощность
  uint8_t comp_power = 155;
  analogWrite(3, comp_power);
  ready = 0;
  float height = 0;

  // Первый этап подъёма - ждём пока жидкость стронется
  uint32_t start_time = millis();
  float last_height = 0;
  while (!ready) {
    // Замеряем высоту жидкости с оверсамплингом overs_s;
    height = start_level - laser_measure(overs_s);
    height = max(height, last_height+0.1);
    last_height = height;

    // Выводим на вторую строчку дисплея текущий уровень
    lcd.setCursor(0, 1);
    String str_out = "Height = ";
    if (height <= 10) {str_out += " ";}
    str_out += String(height, 1);
    str_out += " mm";
    lcd.print(str_out);
    
    if (height < 5) {
      // Повышаем мощность компрессора;
      comp_power = min(comp_power+10, 255);
      analogWrite(3, comp_power);
    }
    else {ready = 1;}

    // Если за 10 секунд жижа не поднялась - выключаем мотор и сообщаем об ошибке
    if (millis() - start_time > 10000) {
      digitalWrite(3, 0);
      Serial.println(F("Error - prelift failed!"));
      lcd.setCursor(0, 0);
      lcd.print("     Error!     ");
      lcd.setCursor(0, 1);
      lcd.print(" Lifting failed ");
      while(1);
    }
  }
  
  // Второй этап подъёма - ждём пока жидкость достигнет высоты 15 мм
  float h_max = 0;
  while (height < 15) {
    // Замеряем высоту жидкости с оверсамплингом overs_s;
    height = start_level - laser_measure(overs_s);
    height = max(height, last_height+0.1);
    last_height = height;
    
    // Выводим на вторую строчку дисплея текущий уровень;
    String str_out = "Height = ";
    if ((height<10) and (height>0)) {str_out += " ";}
    str_out += String(height, 1);
    str_out += " mm";
    lcd.setCursor(0, 1);
    lcd.print(str_out);
    
    h_max = max(height, h_max);
    if (millis() - start_time > 30000) {break;}
  }
  
  // Отключаем мотор
  digitalWrite(3, 0);
  
  uint32_t t0 = millis();
  // Выводим на первую строку дисплея надпись "  Measuring...  "
  lcd.setCursor(0, 0);
  lcd.print("  Measuring...  ");
  last_height = height;
  // Замеряем высоту жидкости с оверсамплингом overs_s и ждём опускания ниже 10 мм
  while (height > 8) {
    uint32_t start_time = millis();
    height = start_level - laser_measure(overs_s);
    h_max = max(height, h_max);
    last_height = height;
    
    String str_out = "H=";
    if ((height<10) and (height>0)) {str_out += " ";}
    str_out += String(height, 1);
    str_out += ",  T ";
    uint16_t curr_time = (millis() - t0) / 1000;
    uint8_t mins = curr_time / 60;
    uint8_t secs = curr_time % 60;
    if (mins<10) {str_out += "0";}
    str_out += mins;
    str_out += ":";
    if (secs<10) {str_out += "0";}
    str_out += secs;
    lcd.setCursor(0, 1);
    lcd.print(str_out);
    
    while (millis() - start_time < 1000);
  }
  

  float visc = 1, new_visc, visc_weight = 5;
  uint16_t curr_time;
  while (height > 4) {
    uint32_t start_time = millis();
    height = start_level - laser_measure(overs_s*2);
    h_max = max(height, h_max);
    last_height = height;

    String str_out = "H=";
    if ((height<10) and (height>0)) {str_out += " ";}
    str_out += String(height, 1);
    str_out += ",  T ";
    curr_time = (millis() - t0) / 1000;
    uint8_t mins = curr_time / 60;
    uint8_t secs = curr_time % 60;
    if (mins<10) {str_out += "0";}
    str_out += mins;
    str_out += ":";
    if (secs<10) {str_out += "0";}
    str_out += secs;
    lcd.setCursor(0, 1);
    lcd.print(str_out);
    
    new_visc = visc_calc(h_max, height, curr_time);
    visc = (new_visc * visc_weight + visc) / (visc_weight + 1.0);
    visc_weight = visc_weight * 0.8;
    str_out = "  Vis. = ";
    if (visc<100 and visc>=10) {str_out += String(visc, 2);}
    else if (visc<10) {str_out += String(visc, 3);}
    else {
      str_out += "ERR!   ";
      Serial.print("Vis. = "); Serial.println(visc);
    }
    lcd.setCursor(0, 0);
    lcd.print(str_out);
    
    while (millis() - start_time < 2000);
  }


  while (height > 2) {
    uint32_t start_time = millis();
    height = start_level - laser_measure(overs_s*3);
    h_max = max(height, h_max);
    last_height = height;

    String str_out = "H=";
    if ((height<10) and (height>0)) {str_out += " ";}
    str_out += String(height, 1);
    str_out += ",  T ";
    curr_time = (millis() - t0) / 1000;
    uint8_t mins = curr_time / 60;
    uint8_t secs = curr_time % 60;
    if (mins<10) {str_out += "0";}
    str_out += mins;
    str_out += ":";
    if (secs<10) {str_out += "0";}
    str_out += secs;
    lcd.setCursor(0, 1);
    lcd.print(str_out);
    
    new_visc = visc_calc(h_max, height, curr_time);
    visc = (new_visc * visc_weight + visc) / (visc_weight + 1.0);
    visc_weight = visc_weight * 0.8;
    str_out = "  Vis. = ";
    if (visc<100 and visc>=10) {str_out += String(visc, 2);}
    else if (visc<10) {str_out += String(visc, 3);}
    else {
      str_out += "ERR!   ";
      Serial.print("Vis. = "); Serial.println(visc);
    }
    lcd.setCursor(0, 0);
    lcd.print(str_out);
    
    while (millis() - start_time < 3000);
  }
  

  bool finaling = 0;
  while (!finaling) {
    uint32_t start_time = millis();
    height = start_level - laser_measure(overs_s*4);
    last_height = height;

    String str_out = "H= ";
    str_out += String(height, 1);
    str_out += ",  T ";
    uint16_t curr_time = (millis() - t0) / 1000;
    uint8_t mins = curr_time / 60;
    uint8_t secs = curr_time % 60;

    if (mins == 2) {
      secs = 0;
      finaling = 1;
    }
    
    if (mins<10) {str_out += "0";}
    str_out += mins;
    str_out += ":";
    if (secs<10) {str_out += "0";}
    str_out += secs;
    lcd.setCursor(0, 1);
    lcd.print(str_out);

    if (height < 0.1) {
      finaling = 1;
    }
    else {
      new_visc = visc_calc(h_max, height, curr_time);
      visc = (new_visc * visc_weight + visc) / (visc_weight + 1.0);
      visc_weight = visc_weight * 0.8;
      str_out = "  Vis. = ";
      if (visc<100 and visc>=10) {str_out += String(visc, 2);}
      else if (visc<10) {str_out += String(visc, 3);}
      else {
        str_out += "ERR!   ";
        Serial.print("Vis. = "); Serial.println(visc);
      }
      lcd.setCursor(0, 0);
      lcd.print(str_out);
    }
    
    while (millis() - start_time < 4000);
  }

  delay(1000);
  lcd.setCursor(0, 1);
  lcd.print("   Measured!    ");
}

void loop() {
  // put your main code here, to run repeatedly:
  delay(1000);
}
